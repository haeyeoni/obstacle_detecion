<launch>

  <param name="use_sim_time" value="true"/>

  <arg name="rviz_config" default="$(find obstacle_detection)/launch/obstacle_view.rviz"/>  
  <arg name="max_height" default="0.5"/>  
  <arg name="min_height" default="-0.2"/>  
  <node name="rviz" pkg="rviz" type="rviz" args="-d $(arg rviz_config)" />
  
  <node pkg="tf" type="static_transform_publisher" name="map_to_odom" args="0 0 0 0 0 0 map odom 100" />
  <node pkg="tf" type="static_transform_publisher" name="base_to_camera" args="0 0 0 0 0 0 base_link camera_link 100" />
  <node pkg="tf" type="static_transform_publisher" name="base_to_laser" args="0 0 0 0 0 0 base_link laser 100" />
  
  <node pkg="obstacle_detection" type="obstacle_detection" name="obstacle_detection" output="screen">
    <param name="minimum_range" value="0.3"  /> 
    <param name="maximum_range" value="3"  /> 
    <param name="minimum_height" value="$(arg min_height)" />
    <param name="maximum_height" value="$(arg max_height)"  />  
    <param name="voxel_size" value="0.1"  /> 
    <param name="max_iteration" value="0"  /> 
  </node>

    <node pkg="pointcloud_to_laserscan" type="pointcloud_to_laserscan_node" name="pointcloud_to_laserscan">
      <remap from="cloud_in" to="/obstacle_cloud"/>
      <remap from="scan" to="/camera_scan" />
      <rosparam>
        target_frame: amcl_link
      </rosparam>
    </node>

  <include file="$(find depth_image_proc)/launch/pointcloud.launch">
  </include> 

  <include file="$(find amcl)/examples/amcl_diff.launch">
  </include>

    <node pkg="octomap_server" type="octomap_server_node" name="octomap_server">
        <param name="resolution" value="0.1" />
	<param name="pointcloud_min_z" value="$(arg min_height)" />
	<param name="pointcloud_max_z" value="$(arg max_height)" />
	<param name="sensor_model/max_range" value="3" />
	<remap from="cloud_in" to="/obstacle_cloud" />
    </node>
</launch>
